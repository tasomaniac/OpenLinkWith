apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'com.jakewharton.hugo'
apply plugin: 'com.github.triplet.play'
apply plugin: 'io.fabric'

Properties local_properties = new Properties()
File localPropertiesFile = project.rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    local_properties.load(localPropertiesFile.newDataInputStream())
}

def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.tasomaniac.openwith"
        minSdkVersion 15
        targetSdkVersion rootProject.ext.compileSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        buildConfigField "String", "GIT_SHA", "\"${gitSha}\""

        resConfigs "ar", "de", "en", "es", "in", "it", "ja", "pl", "pt-rBR", "pt-rPT", "ru", "tr", "uk", "zh-rCN"
    }

    signingConfigs {
        debug {
            storeFile file("../distribution/debug.keystore")
        }

        release {
            storeFile file("../distribution/" + (local_properties.release_keystore_name ?: "debug.keystore"))
            keyAlias(local_properties.release_keystore_alias ?: "androiddebugkey")
            storePassword(local_properties.release_keystore_pwd ?: "android")
            keyPassword(local_properties.release_keystore_pwd2 ?: "android")
        }
    }

    buildTypes {
        debug {
            ext.enableCrashlytics = false
            applicationIdSuffix ".debug"
            signingConfig signingConfigs.debug
            versionNameSuffix "-debug"
        }

        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    productFlavors {
        floss {
            applicationIdSuffix ".floss"
            versionName rootProject.ext.versionName + "-floss"
        }
        play {}
    }

    lintOptions {
        textReport true
        textOutput 'stdout'

        fatal 'UnusedResources'
        warning 'InvalidPackage'
    }
}

play {
    serviceAccountEmail = local_properties.play_service_account ?: ''
    pk12File = file("../distribution/" + (local_properties.play_key_file ?: 'no-file.p12'))
    track = 'beta'
}

dependencies {
    def supportLibVersion = "25.0.0"
    def schematicVersion = '0.6.8'
    def butterKnifeVersion = '8.4.0'

    compile "com.android.support:support-v4:$supportLibVersion"
    compile "com.android.support:appcompat-v7:$supportLibVersion"
    compile "com.android.support:recyclerview-v7:$supportLibVersion"
    compile "com.android.support:design:$supportLibVersion"
    compile "com.android.support:preference-v14:$supportLibVersion"

    compile 'com.tasomaniac:delayed-progress:0.4'

    compile 'jp.wasabeef:recyclerview-animators:2.2.4'

    compile 'de.cketti.mailto:email-intent-builder:1.0.0'

    apt "net.simonvt.schematic:schematic-compiler:$schematicVersion"
    compile "net.simonvt.schematic:schematic:$schematicVersion"

    compile 'com.google.dagger:dagger:2.7'
    apt 'com.google.dagger:dagger-compiler:2.7'
    provided 'org.glassfish:javax.annotation:10.0-b28'

    compile "com.jakewharton:butterknife:$butterKnifeVersion"
    apt "com.jakewharton:butterknife-compiler:$butterKnifeVersion"
    compile 'com.jakewharton.timber:timber:4.3.1'

    compile 'com.squareup.okhttp3:okhttp:3.4.1'

    playCompile 'com.crashlytics.sdk.android:crashlytics:2.6.5'

    testCompile 'junit:junit:4.12'
}
